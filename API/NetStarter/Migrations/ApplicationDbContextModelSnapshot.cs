// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetStarter.Data;

namespace NetStarter.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("NetStarter.Data.Models.OrderEvocher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccessPhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool?>("ActiveFlag")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("text");

                    b.Property<int?>("TicketOrderId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<int>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("Used")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("VoucherType")
                        .HasColumnType("text");

                    b.Property<string>("promocode")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TicketOrderId");

                    b.ToTable("OrderEvochers");
                });

            modelBuilder.Entity("NetStarter.Data.Models.TicketOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool?>("ActiveFlag")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("Amount")
                        .HasColumnType("bigint");

                    b.Property<string>("ClientSecrete")
                        .HasColumnType("text");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<string>("PaymentIntentId")
                        .HasColumnType("text");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("text");

                    b.Property<string>("PictureURL")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TicketOrders");
                });

            modelBuilder.Entity("NetStarter.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool?>("ActiveFlag")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(4000)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(4000)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NetStarter.Data.Models.OrderEvocher", b =>
                {
                    b.HasOne("NetStarter.Data.Models.TicketOrder", "TicketOrder")
                        .WithMany("Evochers")
                        .HasForeignKey("TicketOrderId");

                    b.Navigation("TicketOrder");
                });

            modelBuilder.Entity("NetStarter.Data.Models.TicketOrder", b =>
                {
                    b.HasOne("NetStarter.Data.Models.User", "User")
                        .WithMany("TicketOrders")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NetStarter.Data.Models.TicketOrder", b =>
                {
                    b.Navigation("Evochers");
                });

            modelBuilder.Entity("NetStarter.Data.Models.User", b =>
                {
                    b.Navigation("TicketOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
